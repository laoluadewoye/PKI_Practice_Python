name: test-to-publish-pipeline
permissions:
  contents: read
  pull-requests: write
on:
  schedule:
    - cron: '0 17 * * *'
  push:
    tags:
      - '*'
    branches:
      - main
jobs:
  test-project-nox:
    uses: laoluadewoye/PKI_Practice_Python/.github/workflows/nox_test.yml@main
  build-project:
    if: github.event_name == 'push' && github.ref_type == 'tag'
    needs: test-project-nox
    uses: laoluadewoye/PKI_Practice_Python/.github/workflows/pypi_build.yml@main
  create-html:
    if: github.event.head_commit.author.name != 'Laolu Bot'
    needs: build-project
    runs-on: ubuntu-latest
    environment: Deployment
    permissions:
      contents: write
    steps:
      - name: Check Out Repository Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Setup Git User
        run: |
          git config --global user.name "Laolu Bot"
          git config --global user.email ${{ vars.EMAIL }}
      - name: Setup GPG Key
        uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5
        with:
          gpg_private_key: ${{ secrets.LAOLU_BOT_GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b
        with:
          python-version: 3.12
          cache: pip
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Generate an HTML File
        run: python -m asciidoc -o index.html README.adoc
      - name: Add New HTML to Repo
        run: |
          git checkout main
          git add index.html
          git commit -S -m "Automated update to HTML document."
          git push
  publish-to-pypi:
    needs: build-project
    runs-on: ubuntu-latest
    environment:
      name: Deployment
      url: https://pypi.org/p/PyPkiPractice
    permissions:
      id-token: write
    steps:
      - name: Retrieve Distribution Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: distribution-packages
          path: dist/
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@67339c736fd9354cd4f8cb0b744f2b82a74b5c70
  publish-to-docker:
    needs: build-project
    runs-on: ubuntu-latest
    environment: Deployment
    steps:
      - name: Check Out Repository Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Retrieve Docker Metadata
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/pypkipractice
      - name: Log into Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5
      - name: Build and Push Docker Image
        uses: docker/build-push-action@b32b51a8eda65d6793cd0494a773d4f6bcef32dc
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: true
          sbom: true
  update-docker-repo-info:
    needs: publish-to-docker
    runs-on: ubuntu-latest
    environment: Deployment
    steps:
      - name: Check Out Repository Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@e98e4d1628a5f3be2be7c231e50981aee98723ae
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ vars.DOCKERHUB_USERNAME }}/pypkipractice
          short-description: PKI simulation I created to practice digital certificates and public-key encryption.