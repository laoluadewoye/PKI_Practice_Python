name: test-to-testpublish-pipeline
on:
  schedule:
    - cron: '0 12 * * *'
  push:
    tags:
      - '*'
    branches:
      - main
jobs:
  test-project-nox:
    runs-on: ubuntu-latest
    environment: Test Deployment
    steps:
      - name: Check Out Repository Code
        uses: actions/checkout@v4
      - name: Setup Python 3.5
        uses: actions/setup-python@v5
        with:
          python-version: 3.5
      - name: Setup Python 3.6
        uses: actions/setup-python@v5
        with:
          python-version: 3.6
      - name: Setup Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Setup Python 3.14 Alpha 3
        uses: actions/setup-python@v5
        with:
          python-version: 3.14.0-alpha.3
      - name: Setup Nox
        uses: fjwillemsen/setup-nox2@v3.0.0
      - name: Run Nox
        run: nox
  test-project:
    runs-on: ubuntu-latest
    environment: Test Deployment
    steps:
      - name: Check Out Repository Code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: pip
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Run Tests
        run: pytest PKIPractice/tests
  build-project:
    needs: test-project
    runs-on: ubuntu-latest
    environment: Test Deployment
    steps:
      - name: Check Out Repository Code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: pip
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Build Project
        run: python -m build
      - name: Save Distribution Artifact
        uses: actions/upload-artifact@v4
        with:
          name: distribution-packages
          path: dist/
  publish-to-testpypi:
    needs: build-project
    runs-on: ubuntu-latest
    environment:
      name: Test Deployment
      url: https://test.pypi.org/p/PyPkiPractice
    permissions:
      id-token: write
    steps:
      - name: Retrieve Distribution Artifact
        uses: actions/download-artifact@v4
        with:
          name: distribution-packages
          path: dist/
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
  tagging-test:
    needs: build-project
    runs-on: ubuntu-latest
    environment: Test Deployment
    steps:
      - name: Decide on New Tags
        run: |
          if [[ ${{ github.event_name }} == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            echo "tags=laoluade/pypkipractice:latest,laoluade/pypkipractice:${{ github.ref_name }}" >> $GITHUB_ENV
          else
            echo "tags=laoluade/pypkipractice:latest" >> $GITHUB_ENV
          fi
      - name: Print New Tags
        run: echo ${{ env.tags }}
