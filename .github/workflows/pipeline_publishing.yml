name: Publishing Pipeline
permissions:
  contents: read
  pull-requests: write
on:
  schedule:
    - cron: '0 17 * * *'
  push:
    tags:
      - '*'
    branches:
      - main
jobs:
  test-project-nox:
    if: github.event.head_commit.author.name != 'Laolu Bot'
    uses: laoluadewoye/PKI_Practice_Python/.github/workflows/nox_test.yml@main
  build-project:
    if: github.event_name == 'push' && github.ref_type == 'tag'
    needs: test-project-nox
    uses: laoluadewoye/PKI_Practice_Python/.github/workflows/pypi_build.yml@main
  htmlinputs:
    needs: test-project-nox
    runs-on: ubuntu-latest
    environment: Test Deployment
    outputs:
      user_email: ${{ steps.pass_inputs.outputs.email }}
      user_gpg_key: ${{ steps.pass_inputs.outputs.key }}
    steps:
      - name: Pass Inputs
        id: pass_inputs
        run: |
          echo "email=${{ vars.EMAIL }}" >> "$GITHUB_OUTPUT"
          echo "key=${{ secrets.LAOLU_BOT_GPG_PRIVATE_KEY }}" >> "$GITHUB_OUTPUT"
  create-html:
    if: github.event.head_commit.author.name != 'Laolu Bot' && github.ref_type == 'branch'
    needs: htmlinputs
    permissions:
      contents: write
    uses: laoluadewoye/PKI_Practice_Python/.github/workflows/site_update.yml@main
    with:
      email: ${{ needs.htmlinputs.outputs.user_email }}
      gpg_key: ${{ needs.htmlinputs.outputs.user_gpg_key }}
  publish-to-pypi:
    needs: build-project
    runs-on: ubuntu-latest
    environment:
      name: Deployment
      url: https://pypi.org/p/PyPkiPractice
    permissions:
      id-token: write
    steps:
      - name: Retrieve Distribution Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: distribution-packages
          path: dist/
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@67339c736fd9354cd4f8cb0b744f2b82a74b5c70
  dockerinputs:
    needs: build-project
    runs-on: ubuntu-latest
    environment: Deployment
    outputs:
      docker_user: ${{ steps.pass_inputs.outputs.user }}
      docker_pass: ${{ steps.pass_inputs.outputs.pass }}
    steps:
      - name: Pass Inputs
        id: pass_inputs
        run: |
          echo "user=${{ vars.DOCKERHUB_USERNAME }}" >> "$GITHUB_OUTPUT"
          echo "pass=${{ secrets.DOCKERHUB_TOKEN }}" >> "$GITHUB_OUTPUT"
  update-docker:
    needs: dockerinputs
    uses: laoluadewoye/PKI_Practice_Python/.github/workflows/docker_update.yml@main
    with:
      user: ${{ needs.dockerinputs.outputs.docker_user }}
      pass: ${{ needs.dockerinputs.outputs.docker_pass }}